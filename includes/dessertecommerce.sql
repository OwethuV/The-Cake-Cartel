-- Create the database
CREATE DATABASE IF NOT EXISTS DessertECommerce;
USE DessertECommerce;

-- Create USERS table
CREATE TABLE IF NOT EXISTS USERS (
    userId INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    cell VARCHAR(20),
    address TEXT,
    password VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create PRODUCTS table
CREATE TABLE IF NOT EXISTS PRODUCTS (
    productId INT AUTO_INCREMENT PRIMARY KEY,
    productName VARCHAR(100) NOT NULL,
    productImg VARCHAR(255),
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    flavor VARCHAR(50),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create CART table
CREATE TABLE IF NOT EXISTS CART (
    cartId INT AUTO_INCREMENT PRIMARY KEY,
    userId INT NOT NULL,
    productId INT NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    cartPrice DECIMAL(10, 2) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES USERS(userId) ON DELETE CASCADE,
    FOREIGN KEY (productId) REFERENCES PRODUCTS(productId) ON DELETE CASCADE
);

-- Create ORDERS table with userId added (fix for your error)
CREATE TABLE IF NOT EXISTS ORDERS (
    orderId INT AUTO_INCREMENT PRIMARY KEY,
    userId INT NOT NULL,                 -- << Added this column
    deliveryPrice DECIMAL(10, 2) NOT NULL,
    totalPrice DECIMAL(10, 2) NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'Pending',
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES USERS(userId) ON DELETE CASCADE
);

-- Create ORDER_ITEMS table
CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
    orderItemId INT AUTO_INCREMENT PRIMARY KEY,
    orderId INT NOT NULL,
    productId INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (orderId) REFERENCES ORDERS(orderId) ON DELETE CASCADE,
    FOREIGN KEY (productId) REFERENCES PRODUCTS(productId) ON DELETE CASCADE
);

-- (Optional) You can remove cartId from ORDERS, because the order should not be tied 1:1 with cartId, but rather you track order items separately.

-- Insert your PRODUCTS here (your provided INSERT statements) ...
-- [your product INSERTS go here as-is]
